{"version":3,"file":"static/webpack/static/development/pages/index.js.792bbe0334e124d9f353.hot-update.js","sources":["webpack:///./components/Layout.js","webpack:///./utils/contentful.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Head from 'next/head'\nimport App from 'grommet/components/App'\nimport Image from 'grommet/components/Image'\nimport Header from 'grommet/components/Header'\nimport Title from 'grommet/components/Title'\nimport Box from 'grommet/components/Box'\nimport Menu from 'grommet/components/Menu'\nimport Anchor from 'grommet/components/Anchor'\nimport Footer from 'grommet/components/Footer'\nimport Paragraph from 'grommet/components/Paragraph'\n\nimport 'grommet/scss/vanilla/index.scss'\nimport { getHeader } from '../utils/contentful'\n\nclass Layout extends Component {\n  state = {\n    headerLinks: [],\n  }\n\n  componentDidMount() {\n    getHeader()\n      .then((header) => {\n        this.setState({header})\n      })\n  }\n\n  render() {\n    const {children} = this.props\n    const {header} = this.state\n\n    return (\n      <App>\n        <Head>\n          <link href=\"https://fonts.googleapis.com/css?family=Grand+Hotel\" rel=\"stylesheet\"/>\n        </Head>\n        <Header>\n          <Image src={ header.logo.url }/>\n          <Box\n            flex={ true }\n            justify='end'\n            direction='row'\n            responsive={ false }\n          >\n            <Menu dropAlign={ {'right': 'right'} } direction=\"row\">\n              { header.headerLinks.map(link => (\n                <Anchor key={ link.name } href={ link.scrollId || link.externalLink }>\n                  { link.name }\n                </Anchor>\n              )) }\n            </Menu>\n          </Box>\n        </Header>\n        { children }\n        <Footer justify='between'>\n          <Title>\n            Title\n          </Title>\n          <Box direction='row' align='center' pad={ {'between': 'medium'} }>\n            <Paragraph margin='none'>\n              Â© { new Date().getFullYear() } Bread and Butter\n            </Paragraph>\n            <Menu direction='row' size='small' dropAlign={ {'right': 'right'} }>\n              <Anchor href='#'>\n                Support\n              </Anchor>\n              <Anchor href='#'>\n                Contact\n              </Anchor>\n              <Anchor href='#'>\n                About\n              </Anchor>\n            </Menu>\n          </Box>\n        </Footer>\n      </App>\n    )\n  }\n}\n\nexport default Layout","import * as contentful from 'contentful'\nimport resolveResponse from 'contentful-resolve-response'\nimport { documentToHtmlString } from '@contentful/rich-text-html-renderer'\n\nconst client = contentful.createClient({\n  space: 'codv21t7zkss',\n  accessToken: '35582c3e1386d1379d3f406b801982af4561e94702a7a1b17c2ea17118bc80e4'\n})\n\nfunction getEntriesByType(type) {\n  return client\n    .getEntries({\n      content_type: type,\n    })\n    .then(resolveResponse)\n    .then(res => res.map(item => item.fields))\n    .catch(err => console.error(err))\n}\n\nexport function getHeader() {\n  return getEntriesByType('header')\n}\n\nexport function getHero() {\n  return getEntriesByType('hero')\n    .then(res => ({\n      ...res[0],\n      backgroundImage: res[0].backgroundImage.fields.file,\n    }))\n}\n\nexport function getHowItWorksSection() {\n  return getEntriesByType('howItWorksSection')\n    .then(res => ({\n      ...res[0],\n      steps: res[0].steps\n        .map(step => step.fields)\n        .map(step => ({\n          ...step,\n          photo: step.photo.fields.file,\n          description: documentToHtmlString(step.description),\n        }))\n    }))\n}\n\nexport function getTeamSection() {\n  return getEntriesByType('teamSection')\n    .then(res => ({\n      ...res[0],\n      members: res[0].members\n        .map(member => member.fields)\n        .map(member => ({\n          ...member,\n          photo: member.photo.fields.file,\n        }))\n    }))\n}\n\nexport function getTestimonialsSection() {\n  return getEntriesByType('testimonials')\n    .then(res => ({\n      ...res[0],\n      testimonials: res[0].testimonials\n        .map(t => t.fields)\n        .map(t =>({ ...t, review: documentToHtmlString(t.review)}))\n    }))\n}\n\ngetTestimonialsSection().then(console.log.bind(console))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA9DA;AACA;AAgEA;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AAEA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAEA;AADA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AAAA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAAA;AAJA;AAAA;AAUA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAFA;AAAA;AAJA;AAAA;AASA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAMA;AAEA;;;;A","sourceRoot":""}